---
apiVersion: v1
kind: Namespace
metadata:
  name: sample-longhorn
  labels:
    app: sample-longhorn
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: sample-longhorn-logs
  namespace: sample-longhorn
  labels:
    app: sample-longhorn
spec:
  storageClassName: longhorn
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 50Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sample-longhorn-deployment
  namespace: sample-longhorn
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sample-longhorn
  template:
    metadata:
      labels:
        app: sample-longhorn
      annotations:
        pre.hook.backup.velero.io/container: fsfreeze
        pre.hook.backup.velero.io/command: '["/bin/fsfreeze", "--freeze", "/var/log/nginx"]'
        post.hook.backup.velero.io/container: fsfreeze
        post.hook.backup.velero.io/command: '["/bin/fsfreeze", "--unfreeze", "/var/log/nginx"]'
    spec:
      volumes:
        - name: sample-longhorn-logs
          persistentVolumeClaim:
           claimName: sample-longhorn-logs
      containers:
      - image: nginx:1.19.4-alpine
        name: nginx
        ports:
        - containerPort: 80
        volumeMounts:
          - mountPath: "/var/log/nginx"
            name: sample-longhorn-logs
            readOnly: false
      - image: busybox:1.32.0-glibc
        name: fsfreeze
        securityContext:
          privileged: true
        volumeMounts:
          - mountPath: "/var/log/nginx"
            name: sample-longhorn-logs
            readOnly: false
        command:
          - "/bin/sh"
          - "-c"
          - "sleep infinity"
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: sample-longhorn
  name: my-sample-longhorn-svc
  namespace: sample-longhorn
spec:
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: sample-longhorn
  type: LoadBalancer
