repositories:
  - name: chartcenter
    url: https://repo.chartcenter.io

releases:

#  VAULT + SECRETS OPERATOR
#  * VAULT
#  * Secrets oeprator
#  https://github.com/ricoberger/vault-secrets-operator

- name: vault
  chart: chartcenter/hashicorp/vault
  version: '{{ .Values | get "vault_version" "0.8.0" }}'
  namespace: vault
  createNamespace: true
  wait: true
  values:
    - environments/{{ .Environment.Name }}/vault/values.yaml.gotmpl
  labels:
    tier: secrets
    scope: vault

#  LB + INGRESS CONTROLLERS
#  * MetalLB as Load Balancer
#  * NGinx for internal usage (lan)
#  * NGinx for external usage (internet)
#  * CertManager for ssl certificates for external usage

- name: metallb-config
  chart: chartcenter/incubator/raw
  namespace: metallb-system
  createNamespace: true
  wait: true
  version: "0.2.5"
  values:
    - environments/{{ .Environment.Name }}/metallb/resources.yaml
    - environments/all/metallb/templates.yaml.gotmpl
  labels:
    tier: loadbalancer
    scope: metalconfig

- name: metallb-system
  namespace: metallb-system
  createNamespace: true
  wait: true
  chart: ./metallb
  hooks:
    - events:
        - prepare
        - cleanup
      command: "./helmify.sh"
      args: ["{{`{{if eq .Event.Name \"prepare\"}}build{{else}}clean{{end}}`}}", "{{`{{.Release.Chart}}`}}", "{{`{{.Environment.Name}}`}}"]
  labels:
    tier: loadbalancer
    scope: metalsystem

- name: cert-manager
  namespace: cert-manager
  createNamespace: true
  wait: true
  chart: chartcenter/jetstack/cert-manager
  version: '{{ .Values | get "certmanager_version" "v1.0.4" }}'
  values:
    - installCRDs: true
  labels:
    tier: cert
    scope: manager

- name: cert-issuers
  chart: chartcenter/incubator/raw
  namespace: cert-manager
  version: "0.2.5"
  disableValidation: true
  values:
    - environments/{{ .Environment.Name }}/cert-manager/templates.yaml.gotmpl
  labels:
    tier: cert
    scope: issuers

- name: nginx-internal
  chart: chartcenter/kubernetes-ingress-nginx/ingress-nginx
  namespace: kube-system
  createNamespace: true
  wait: false
  version: '{{ .Values | get "nginx_int_version" "3.0.8" }}'
  values:
    - environments/{{ .Environment.Name }}/nginx/internal.yaml
  labels:
    tier: ingress
    scope: internal

- name: nginx-external
  chart: chartcenter/kubernetes-ingress-nginx/ingress-nginx
  namespace: kube-system
  createNamespace: true
  wait: false
  version: '{{ .Values | get "nginx_ext_version" "3.0.8" }}'
  values:
    - environments/{{ .Environment.Name }}/nginx/external.yaml
  labels:
    tier: ingress
    scope: external

#  STORAGE
#  * OpenEBS localPV for high IOPs or clustered apps
#  * Longorn clustered storaged
#  * Velero for backup

- name: hostpath
  namespace: openebs
  createNamespace: true
  wait: true
  chart: chartcenter/openebs/openebs
  version: '{{ .Values | get "openebs_version" "2.2.1" }}'
  values:
    - environments/{{ .Environment.Name }}/openebs/values.yaml
  labels:
    tier: storage
    scope: openebs

- name: hostpath-sc
  chart: chartcenter/incubator/raw
  namespace: cert-manager
  version: "0.2.5"
#  disableValidation: true
  values:
    - environments/{{ .Environment.Name }}/openebs/sc-openebs-hostpath.yaml
  labels:
    tier: storage
    scope: openebs-sc

- name: longhorn
  namespace: longhorn
  createNamespace: true
  wait: true
  chart: chartcenter/longhorn/longhorn
  version: '{{ .Values | get "longhorn_version" "1.0.2" }}'
  values:
    - environments/{{ .Environment.Name }}/longhorn/values.yaml
  labels:
    tier: storage
    scope: longhorn

- name: longhorn-sc
  chart: chartcenter/incubator/raw
  namespace: longhorn
  version: "0.2.5"
  disableValidation: true
  values:
    - environments/{{ .Environment.Name }}/longhorn/sc-longhorn.yaml
  labels:
    tier: storage
    scope: longhorn-sc

- name: velero-config
  chart: chartcenter/incubator/raw
  createNamespace: true
  namespace: velero
  wait: true
  version: "0.2.5"
  values:
    - environments/all/velero/templates.yaml.gotmpl
  labels:
    tier: backup
    scope: s3config

- name: velero-system
  namespace: velero
  createNamespace: true
  disableValidation: true
  chart: chartcenter/vmware-tanzu/velero
  version: '{{ .Values | get "velero_version" "2.12.17" }}'
  values:
    - environments/{{ .Environment.Name }}/velero/values.yaml.gotmpl
  labels:
    tier: backup
    scope: velero

environments:
  dev:
    secrets:
      - environments/dev/secrets.yaml
    values:
      - vault_version: '0.8.0'
      - nginx_int_version: '3.13.0'
      - nginx_ext_version: '3.13.0'
      - certmanager_version: 'v1.1.0'
      - openebs_version: '2.3.1'
      - longhorn_version: '1.0.2'
      - velero_version: '2.12.17'
  nuc:
    secrets:
      - environments/nuc/secrets.yaml
    values:
      - vault_version: '0.8.0'
      - nginx_int_version: '3.12.0'
      - nginx_ext_version: '3.12.0'
      - certmanager_version: 'v1.1.0'
      - openebs_version: '2.2.1'
      - longhorn_version: '1.0.2'
      - velero_version: '2.12.17'
