helmDefaults:
  wait: true
  historyMax: 5

repositories:
  - name: argo
    url: https://argoproj.github.io/argo-helm
  - name: jetstack
    url: https://charts.jetstack.io
  - name: ingress-nginx
    url: https://kubernetes.github.io/ingress-nginx
  - name: incubator
    url: https://charts.helm.sh/incubator
  - name: longhorn
    url: https://charts.longhorn.io
  - name: vmware-tanzu
    url: https://vmware-tanzu.github.io/helm-charts/
  - name: prometheus-community
    url: https://prometheus-community.github.io/helm-charts
  - name: kured
    url: https://weaveworks.github.io/kured
  - name: banzaicloud-stable
    url: https://kubernetes-charts.banzaicloud.com
#  - name: nextcloud
#    url: https://nextcloud.github.io/helm/

releases:

- name: vault-operator
  chart: banzaicloud-stable/vault-operator
  version: 1.13.0
  namespace: vault-operator
  createNamespace: true
#  installed: {{ exec "./scripts/check-crd-installed.sh" (list "vaults.vault.banzaicloud.com") | trim }}
  labels:
    tier: secrets
    scope: vault-operator
    stage: 1

- name: vault-rbac
  chart: incubator/raw
  namespace: vault
  version: 0.2.5
  atomic: true
  force: true
  wait: true
  values:
    - environments/{{ .Environment.Name }}/vault/rbac.yaml
  labels:
    tier: secrets
    scope: banzai-vault-rbac
    stage: 2

- name: vault-server
  chart: incubator/raw
  namespace: vault
  version: 0.2.5
  atomic: true
  force: true
  wait: true
  disableValidation: true
  values:
    - environments/{{ .Environment.Name }}/vault/cr-raft-storage.yaml
  labels:
    tier: secrets
    scope: vault-server
    stage: 3

- name: banzai-injector
  chart: banzaicloud-stable/vault-secrets-webhook
  version: '{{ .Values | get "banzai_version" "1.13.0" }}'
  namespace: vault-infra
  createNamespace: true
  wait: true
  values:
    - environments/{{ .Environment.Name }}/vault/banzai-injector.yaml
  labels:
    tier: secrets
    scope: banzai-injector
    stage: 4

- name: argocd
  chart: argo/argo-cd
  version: '{{ .Values | get "argocd_version" "3.17.5" }}'
  namespace: argocd
  createNamespace: true
  values:
    - environments/{{ .Environment.Name }}/argocd/values.yaml.gotmpl
  labels:
    tier: cd
    scope: argocd

- name: argocd-notifications
  chart: argo/argocd-notifications
  version: '{{ .Values | get "argocd_notifications_version" "1.5.0" }}'
  namespace: argocd
  createNamespace: true
  values:
    - environments/{{ .Environment.Name }}/argocd-notifications/values.yaml.gotmpl
  labels:
    tier: notifications
    scope: argocd

#  LB + INGRESS CONTROLLERS
#  * NGinx for internal usage (lan)
#  * NGinx for external usage (internet)
#  * CertManager for ssl certificates for external usage

- name: cert-manager
  namespace: cert-manager
  createNamespace: true
  chart: jetstack/cert-manager
  version: '{{ .Values | get "certmanager_version" "v1.5.4" }}'
  values:
    - installCRDs: true
  labels:
    tier: cert
    scope: manager

- name: nginx-internal
  chart: ingress-nginx/ingress-nginx
  namespace: kube-system
  createNamespace: true
  wait: false
  version: '{{ .Values | get "nginx_int_version" "3.0.8" }}'
  values:
    - environments/{{ .Environment.Name }}/nginx/internal.yaml
  labels:
    tier: ingress
    scope: internal

- name: nginx-external
  chart: ingress-nginx/ingress-nginx
  namespace: kube-system
  createNamespace: true
  wait: false
  version: '{{ .Values | get "nginx_ext_version" "3.0.8" }}'
  values:
    - environments/{{ .Environment.Name }}/nginx/external.yaml
  labels:
    tier: ingress
    scope: external

# If we put this just below the cert mangager the crd ar not ready
# and will generate an error

- name: cert-issuers
  chart: incubator/raw
  namespace: cert-manager
  version: '{{ .Values | get "raw_version" "0.2.5" }}'
  disableValidation: true
  values:
    - environments/{{ .Environment.Name }}/cert-manager/templates.yaml.gotmpl
  labels:
    tier: cert
    scope: issuers

#  STORAGE
#  * Longorn clustered storaged
#  * Velero for backup

- name: longhorn
  namespace: longhorn
  createNamespace: true
  wait: true
  chart: longhorn/longhorn
  version: '{{ .Values | get "longhorn_version" "1.0.2" }}'
  values:
    - environments/{{ .Environment.Name }}/longhorn/values.yaml
  labels:
    tier: storage
    scope: longhorn

- name: longhorn-sc
  chart: incubator/raw
  namespace: longhorn
  version: '{{ .Values | get "raw_version" "0.2.5" }}'
  disableValidation: true
  values:
    - environments/{{ .Environment.Name }}/longhorn/sc-longhorn.yaml
  labels:
    tier: storage
    scope: longhorn-sc

- name: longhorn-rwx
  chart: incubator/raw
  namespace: longhorn
  version: '{{ .Values | get "raw_version" "0.2.5" }}'
  disableValidation: true
  values:
    - environments/{{ .Environment.Name }}/longhorn/rwx-security-longhorn.yaml
  labels:
    tier: storage
    scope: longhorn-rwx

- name: longhorn-nfs
  chart: incubator/raw
  namespace: longhorn
  version: '{{ .Values | get "raw_version" "0.2.5" }}'
  disableValidation: true
  values:
    - environments/{{ .Environment.Name }}/longhorn/nfs-provisioner-longhorn.yaml
  labels:
    tier: storage
    scope: longhorn-rwx

- name: longhorn-sm
  chart: incubator/raw
  namespace: monitoring
  version: '{{ .Values | get "raw_version" "0.2.5" }}'
  disableValidation: true
  values:
    - environments/{{ .Environment.Name }}/longhorn/servicemonitor-longhorn.yaml.gotmpl
  labels:
    tier: storage
    scope: longhorn-sm

- name: velero-config
  chart: incubator/raw
  createNamespace: true
  namespace: velero
  version: '{{ .Values | get "raw_version" "0.2.5" }}'
  values:
    - environments/all/velero/templates.yaml.gotmpl
  labels:
    tier: backup
    scope: s3config

- name: velero-system
  namespace: velero
  createNamespace: true
  disableValidation: true
  chart: vmware-tanzu/velero
  version: '{{ .Values | get "velero_version" "2.12.17" }}'
  values:
    - environments/{{ .Environment.Name }}/velero/values.yaml.gotmpl
  labels:
    tier: backup
    scope: velero

# MONITORING
# * prometheus
# * grafana
# * alertmanager
# * blackbox-exporter

- name: monitoring
  namespace: monitoring
  createNamespace: true
  disableValidation: true
  # Set disableOpenAPIValidation to true if your chart contains CRDs or install-crd hooks.
  # * https://github.com/roboll/helmfile/issues/1124
  disableOpenAPIValidation: true
  chart: prometheus-community/kube-prometheus-stack
  version: '{{ .Values | get "prometheus_stack_version" "12.8.0" }}'
  values:
    - environments/{{ .Environment.Name }}/prometheus-stack/values.yaml.gotmpl
  labels:
    tier: monitoring
    scope: prometheus-stack

# SYSTOOLS
# * kured

- name: kured
  namespace: kured
  createNamespace: true
  chart: kured/kured
  version: '{{ .Values | get "kured_version" "2.4.3" }}'  
  values:
    - environments/{{ .Environment.Name }}/kured/values.yaml
  labels:
    scope: kured

environments:
  dev:
    secrets:
      - environments/dev/secrets.yaml
    values:
      - nginx_int_version: '3.32.0'
      - nginx_ext_version: '3.32.0'
      - longhorn_version: '1.1.0'
      - velero_version: '2.12.17'
      - prometheus_stack_version: '12.10.6'
  nuc:
    secrets:
      - environments/nuc/secrets.yaml
    values:
      - nginx_int_version: '3.32.0'
      - nginx_ext_version: '3.32.0'
      - longhorn_version: '1.1.1'
      - velero_version: '2.12.17'
      - prometheus_stack_version: '12.10.6'
